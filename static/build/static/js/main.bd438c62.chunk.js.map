{"version":3,"sources":["components/Popup.js","App.js","reportWebVitals.js","index.js"],"names":["Popup","state","val","id","componentDidMount","setState","props","editTask","task_name","axios","put","then","res","update","classes","this","Dialog","open","edit","maxWidth","aria-labelledby","DialogTitle","DialogContent","TextField","className","input","autoFocus","margin","variant","label","value","onChange","e","target","type","fullWidth","DialogActions","Button","onClick","closeDialog","color","Component","withStyles","width","App","editItem","taskId","taskVal","closePopup","delItem","delete","console","log","data","prevState","tasks","filter","t","get","catch","err","vError","createTask","post","Paper","paperStyle","header","helperText","error","button","map","Grid","container","item","xs","ListItem","listItem","name","Fab","size","aria-label","fabIcon","textAlign","marginLeft","background","cursor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd438c62.chunk.js","sourcesContent":["import { Dialog, DialogActions,Button,withStyles, DialogContent, DialogTitle, TextField } from '@material-ui/core'\r\nimport {Component} from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nconst styles = {\r\n    input:{\r\n        width:\"300px\"\r\n    },\r\n}\r\n\r\nclass Popup extends Component{\r\n\r\n    state = {\r\n        val:'',\r\n        id:''\r\n    }\r\n\r\n    componentDidMount=()=>{\r\n        this.setState({val:this.props.val})\r\n        this.setState({id:this.props.id})\r\n    }\r\n\r\n    editTask= ()=>{\r\n        const task_name = {\r\n            task_name: this.state.val\r\n          }\r\n        axios.put('/api/editTodo/' + this.state.id, task_name)\r\n      .then(res => this.props.update());\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return(\r\n            <Dialog open={this.props.edit} maxWidth='xl' aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Edit Item</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n          className={classes.input}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            variant='outlined'\r\n            label=\"Task Value\"\r\n            value={this.state.val}\r\n            onChange={(e)=>this.setState({val:e.target.value})}\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.props.closeDialog}  color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={this.editTask}  color=\"primary\">\r\n            Edit Task\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Popup);","import { withStyles, Paper, TextField, Button, ListItem, Grid} from '@material-ui/core';\r\nimport { Component } from 'react'\r\nimport axios from 'axios'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { HighlightOff } from '@material-ui/icons';\r\nimport Popup from './components/Popup'\r\n\r\n\r\nconst styles = {\r\n  header: {\r\n    textAlign: 'center'\r\n  },\r\n  paperStyle: {\r\n    margin: '30px'\r\n  },\r\n  TextField: {\r\n    width: '50%',\r\n    marginLeft: '340px'\r\n  },\r\n  fabIcon: {\r\n    margin: '0 10px 10px 0'\r\n  },\r\n  button: {\r\n    margin: '10px 0px 10px 600px'\r\n  },\r\n  listItem: {\r\n    '&:hover': {\r\n      background: '#d3d9db',\r\n      cursor: 'pointer'\r\n    }\r\n  },\r\n};\r\n\r\n\r\nclass App extends Component {\r\n\r\n  editItem = (id, val) => {\r\n    this.setState({ edit: true })\r\n    this.setState({ taskId: id })\r\n    this.setState({ taskVal: val })\r\n  }\r\n\r\n  closePopup = () => {\r\n    this.setState({ edit: false })\r\n  }\r\n\r\n  delItem = (id) => {\r\n    axios.delete('/api/editTodo/' + id)\r\n      .then(res => console.log(res.data));\r\n    this.setState(prevState => ({\r\n      tasks: prevState.tasks.filter(t => t.id !== id)\r\n    }))\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    axios.get('/api/addTodo')\r\n      .then(res => this.setState({ tasks: res.data }))\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  state = {\r\n    vError: false,\r\n    val: '',\r\n    tasks: [],\r\n    edit: false,\r\n    taskVal: '',\r\n    taskId: ''\r\n  }\r\n\r\n  update = () => {\r\n    this.setState({ edit: false })\r\n    axios.get('/api/addTodo')\r\n      .then(res => this.setState({ tasks: res.data }))\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  createTask = () => {\r\n    if (this.state.val === '') {\r\n      this.setState({ vError: true })\r\n    }\r\n    else {\r\n      const task_name = {\r\n        task_name: this.state.val\r\n      }\r\n      axios.post('/api/addTodo', task_name)\r\n        .then(() => axios.get('/api/addTodo')\r\n          .then(res => this.setState({ val: '', tasks: res.data }))\r\n          .catch(err => console.log(err)));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <>\r\n        <Paper className={classes.paperStyle}>\r\n          <h1 className={classes.header}>React Crud App</h1>\r\n          <br />\r\n          <TextField\r\n            helperText={this.state.vError ? 'This Field Is Requird' : ''}\r\n            error={this.state.vError}\r\n            value={this.state.val} onChange={(e) => this.setState({ vError: false, val: e.target.value })} className={classes.TextField} variant='outlined' label='Enter The Value'></TextField>\r\n          <br></br>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={this.createTask} className={classes.button}>\r\n            Submit\r\n        </Button>\r\n          <hr></hr>\r\n          {this.state.tasks.map(t => (\r\n            <div>\r\n              <hr />\r\n              <Grid container>\r\n                <Grid item xs={6}>\r\n                  <ListItem className={classes.listItem} key={t.id}>{t.name}</ListItem>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Fab size=\"small\" color=\"secondary\" aria-label=\"edit\" className={classes.fabIcon} onClick={() => this.editItem(t.id, t.name)}>\r\n                    <EditIcon />\r\n                  </Fab>\r\n                  <Fab size=\"small\" color=\"secondary\" aria-label=\"Close\" className={classes.fabIcon} onClick={() => this.delItem(t.id)}>\r\n                    <CloseIcon />\r\n                  </Fab>\r\n                  {/* <Button onClick={() => this.editItem(t._id, t.task_name)}><EditIcon className={classes.icon} fontSize='default'></EditIcon></Button>\r\n                  <Button onClick={() => this.delItem(t._id)}><HighlightOff className={classes.icon}></HighlightOff></Button> */}\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          ))}\r\n          {this.state.edit ? <Popup update={this.update} id={this.state.taskId} val={this.state.taskVal} edit={this.state.edit} closeDialog={this.closePopup}></Popup> : null}\r\n        </Paper>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}